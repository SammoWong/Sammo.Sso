// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sammo.Sso.Infrastructure.Data.Context;

namespace Sammo.Sso.Infrastructure.Data.Migrations
{
    [DbContext(typeof(SsoDbContext))]
    [Migration("20190627100214_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Sammo.Sso.Domain.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("ClientId")
                        .HasColumnName("ClientId")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<string>("ClientName")
                        .HasColumnName("ClientName")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<string>("ClientSecrets")
                        .HasColumnName("ClientSecrets")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnName("CreatedTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("DisplayName")
                        .HasColumnName("DisplayName")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnName("ModifiedBy")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnName("ModifiedTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("PostLogoutRedirectUris")
                        .HasColumnName("PostLogoutRedirectUris")
                        .HasColumnType("VARCHAR(512)");

                    b.Property<string>("RedirectUris")
                        .HasColumnName("RedirectUris")
                        .HasColumnType("VARCHAR(512)");

                    b.Property<string>("Remark")
                        .HasColumnName("Remark")
                        .HasColumnType("VARCHAR(512)");

                    b.HasKey("Id");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("Sammo.Sso.Domain.Entities.Button", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Code")
                        .HasColumnName("Code")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnName("CreatedTime")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Enabled")
                        .HasDefaultValue(true);

                    b.Property<string>("Icon")
                        .HasColumnName("Icon")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<string>("JsEvent")
                        .HasColumnName("JsEvent")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<Guid>("MenuId")
                        .HasColumnName("MenuId")
                        .HasColumnType("CHAR(36)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnName("ModifiedBy")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnName("ModifiedTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<string>("Remark")
                        .HasColumnName("Remark")
                        .HasColumnType("VARCHAR(512)");

                    b.Property<int>("SortNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SortNumber")
                        .HasDefaultValue(1);

                    b.Property<string>("Url")
                        .HasColumnName("Url")
                        .HasColumnType("VARCHAR(512)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("Button");
                });

            modelBuilder.Entity("Sammo.Sso.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("CHAR(36)");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnName("ApplicationId")
                        .HasColumnType("CHAR(36)");

                    b.Property<byte>("Category")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Category")
                        .HasDefaultValue((byte)1);

                    b.Property<string>("Code")
                        .HasColumnName("Code")
                        .HasColumnType("VARCHAR(100)")
                        .HasMaxLength(32);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnName("CreatedTime")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Enabled")
                        .HasDefaultValue(true);

                    b.Property<string>("Icon")
                        .HasColumnName("Icon")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<bool>("IsExpanded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsExpanded")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnName("ModifiedBy")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnName("ModifiedTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnName("ParentId")
                        .HasColumnType("CHAR(36)");

                    b.Property<short>("Rank")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Rank")
                        .HasDefaultValue((short)1);

                    b.Property<string>("Remark")
                        .HasColumnName("Remark")
                        .HasColumnType("VARCHAR(512)");

                    b.Property<int>("SortNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SortNumber")
                        .HasDefaultValue(1);

                    b.Property<string>("Url")
                        .HasColumnName("Url")
                        .HasColumnType("VARCHAR(512)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Sammo.Sso.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("AccessId")
                        .HasColumnName("AccessId")
                        .HasColumnType("CHAR(36)");

                    b.Property<byte>("AccessType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AccessType")
                        .HasDefaultValue((byte)1);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnName("CreatedTime")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Enabled")
                        .HasDefaultValue(true);

                    b.Property<string>("MasterId")
                        .HasColumnName("MasterId")
                        .HasColumnType("CHAR(36)");

                    b.Property<byte>("MasterType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MasterType")
                        .HasDefaultValue((byte)1);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnName("ModifiedBy")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnName("ModifiedTime")
                        .HasColumnType("DATETIME");

                    b.Property<int>("SortNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SortNumber")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Sammo.Sso.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Code")
                        .HasColumnName("Code")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnName("CreatedTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("VARCHAR(512)");

                    b.Property<bool>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Enabled")
                        .HasDefaultValue(true);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnName("ModifiedBy")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnName("ModifiedTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("VARCHAR(32)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Sammo.Sso.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Avatar")
                        .HasColumnName("Avatar")
                        .HasColumnType("VARCHAR(512)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnName("Birthday")
                        .HasColumnType("DATETIME");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnName("CreatedTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<bool>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Enabled")
                        .HasDefaultValue(true);

                    b.Property<byte?>("Gender")
                        .HasColumnName("Gender");

                    b.Property<string>("IdCard")
                        .HasColumnName("IdCard")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<string>("Mobile")
                        .HasColumnName("Mobile")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnName("ModifiedBy")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnName("ModifiedTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("NickName")
                        .HasColumnName("NickName")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<string>("Password")
                        .HasColumnName("Password")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<string>("RealName")
                        .HasColumnName("RealName")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<string>("Salt")
                        .HasColumnName("Salt")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<string>("UserName")
                        .HasColumnName("UserName")
                        .HasColumnType("VARCHAR(32)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Sammo.Sso.Domain.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("CHAR(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnName("RoleId")
                        .HasColumnType("CHAR(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnName("UserId")
                        .HasColumnType("CHAR(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Sammo.Sso.Domain.Entities.Button", b =>
                {
                    b.HasOne("Sammo.Sso.Domain.Entities.Menu", "Menu")
                        .WithMany("Buttons")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sammo.Sso.Domain.Entities.Menu", b =>
                {
                    b.HasOne("Sammo.Sso.Domain.Entities.Application", "Application")
                        .WithMany("Menus")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sammo.Sso.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("Sammo.Sso.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammo.Sso.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
